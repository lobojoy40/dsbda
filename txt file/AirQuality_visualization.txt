import pandas as pd
import numpy as np
df = pd.read_csv('AirQuality_visualization.csv',delimiter=';')
df

df = df.rename(columns={'T': 'Temperature'})
df = df.rename(columns={'RH': 'Relative Humidity'})
df = df.rename(columns={'AH': 'Absolute Humidity'})
df

df = df.drop(['Unnamed: 15', 'Unnamed: 16'],axis=1)
df

for column in ['CO(GT)', 'C6H6(GT)', 'Temperature', 'Relative Humidity', 'Absolute Humidity']:
    if df[column].dtype == object:  
        df[column] = df[column].str.replace(',', '.').astype(float)
    elif df[column].dtype == 'float64' or df[column].dtype == 'int64':
        pass
    else:
        try:
            df[column] = df[column].astype(float)
        except:
            df[column] = df[column].astype(str).str.replace(',', '.').astype(float)
df

df.info()

df.head()

df=df.drop_duplicates()
df.isna().sum()

df = df.fillna(df.mean(numeric_only=True)); df = df.dropna()
df.isna().sum()

df

df['Absolute Humidity'] = df['Absolute Humidity'].multiply(100)
df

import seaborn as sns
import matplotlib.pyplot as plt

def remove_outliers(column):
    Q1 = column.quantile(0.25)
    Q3 = column.quantile(0.75)
    IQR = Q3 - Q1
    threshold = 1.5 * IQR
    outlier_mask = (column < Q1 - threshold) | (column > Q3 + threshold)
    return column[~outlier_mask]

df.columns

col_name = ['Temperature','Relative Humidity','Absolute Humidity','PT08.S4(NO2)','PT08.S5(O3)','C6H6(GT)',
       'PT08.S2(NMHC)','PT08.S1(CO)']
for col in col_name:
    df[col] = remove_outliers(df[col])

df['Year'] = pd.to_datetime(df['Date'], dayfirst=True).dt.year
df['Month'] = pd.to_datetime(df['Date'], dayfirst=True).dt.month

df

df['yearr']= df.Year.astype(str)
df['month']= df.Month.astype(str)
numeric_df = df.select_dtypes(include=['float64', 'int64'])

plt.figure(figsize=(8, 6))
sns.heatmap(numeric_df.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

df.columns

sns.lineplot(df,x="Year",y='Absolute Humidity')

sns.lineplot(df,x="month",y='Absolute Humidity')

sns.lineplot(df,x="Year",y='Temperature')

sns.lineplot(df,x="month",y='Temperature',)

sns.lineplot(df,x="month",y='CO(GT)',)

sns.lineplot(df,x="Year",y='NO2(GT)')

sns.lineplot(df,x="month",y='NO2(GT)')

sns.lineplot(df,x='PT08.S1(CO)',y='PT08.S5(O3)',hue='Year')

sns.lineplot(df,x='PT08.S1(CO)',y='PT08.S5(O3)',hue='month')

sns.barplot(df,x=df.Year,y=df.Temperature)

sns.barplot(df,x=df.month,y=df['CO(GT)'])

sns.barplot(df,x=df.Year,y='Absolute Humidity')

sns.barplot(df,x=df.month,y='PT08.S1(CO)')

sns.scatterplot(df,x='PT08.S1(CO)',y='PT08.S5(O3)', hue='yearr')

df.columns

sns.scatterplot(df,x='NO2(GT)',y='NOx(GT)', hue='month')

sns.scatterplot(df,y='PT08.S2(NMHC)',x='PT08.S1(CO)', hue='yearr')

sns.scatterplot(df,y='PT08.S2(NMHC)',x='PT08.S1(CO)', hue='month')





























